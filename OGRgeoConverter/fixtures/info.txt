Fixtures provide initial data for models. The data is loaded when you run syncdb.

Example syncdb command: 'python manage.py loaddata ogr_formats.json --database=ogrgeoconverter_db'

ogr_formats contains a list of possible import and export formats used by the OGR GeoConverter. It has the following structure:

[
	{
		"model": "OGRgeoConverter.OgrFormat",
		"pk": 1,
		"fields": {
			"name": "Format1",
			"ogr_name": "...",
			"file_extension": "...",
			"output_type": "file",
			"state_all_files": 0
		}
	},
	
	{
		"model": "OGRgeoConverter.OgrFormat",
		"pk": 2,
		"fields": {
			"name": "Format2",
			"ogr_name": "...",
			"file_extension": "...",
			"output_type": "folder",
			"state_all_files": 1
		}
	},
	{
		"model": "OGRgeoConverter.AdditionalOgrFormat",
		"pk": 1,
		"fields": {
		    "ogr_format": 2,
		    "file_extension": "...",
		    "required": 1,
		    "multiple": 0,
		    "order": 1
		}
    }
]

Make sure every ID (pk) is unique!
